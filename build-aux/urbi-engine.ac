# This file tries to factor the common bits for URBI engines:
# initializing Autotools, defining standard directory variables
# (URBI_DIRS), generating the documentation, etc.  Some parts cannot
# be factored because of limitation in the Autotools, otherwise this
# would be named URBI_INIT for instance, and also include AC_INIT.
#
# We also tried to make it a macro, but it does not work as expected
# because of unexpected behavior from AC_REQUIRE.  I currently don't
# understand everything that happens, and I no longer want to dive
# into the AC_REQUIRE machinery...
#
# Try to use it in every URBI engine, and keep their copy in sync.

AC_PREREQ([2.60])

# Automake.
AM_INIT_AUTOMAKE([foreign 1.9.6 -Wall dist-zip nostdinc])

# build-aux etc.
URBI_BUILD_AUX
URBI_LIBPORT

## ------------ ##
## Parameters.  ##
## ------------ ##

# doc/srcdoc.
URBI_DOC

# C++ Compiler.
URBI_PROG_CXX

# We don't need static libraries, speed the compilation up.
AC_ENABLE_SHARED([no])
AC_PROG_LIBTOOL

# Every engine comes with an SDK.
URBI_SDK

# Every engine needs the libkernel.
dnl NOTE: this requires kerneldir to be defined (by URBI_DIRS)
if test x"$kerneldir" != x; then
  AC_CACHE_CHECK([for libkernel.la], [urbi_cv_has_libkernel_la],
  [urbi_cv_has_libkernel_la=no
  # Expand the $(MAKE-style) variables.
  my_kerneldir=`echo "$kerneldir" | sed 's/(\(@<:@a-zA-Z0-9_@:>@*\))/{\1}/g'`
  eval my_kerneldir="$my_kerneldir"
  # Again. Because in the first expansion,
  # $(branddir) is expanded in $(prefix)/$(PACKAGE_BRAND)
  my_kerneldir=`echo "$my_kerneldir" | sed 's/(\(@<:@a-zA-Z0-9_@:>@*\))/{\1}/g'`
  eval my_kerneldir="$my_kerneldir"
  echo "$as_me:$LINENO: Looking for libkernel.la in $my_kerneldir" \
    >&AS_MESSAGE_LOG_FD
  test -f "$my_kerneldir/libkernel.la" &&
    urbi_cv_has_libkernel_la="$my_kerneldir/libkernel.la"])
  if test x"$urbi_cv_has_libkernel_la" = xno; then
    AC_MSG_ERROR([Cannot find libkernel.la])
  fi
fi

## -------- ##
## Output.  ##
## -------- ##

AC_CONFIG_HEADERS([sdk/config.h])
AC_CONFIG_FILES([Makefile])


## Local Variables:
## mode: autoconf
## End:
## vim:ft=config
