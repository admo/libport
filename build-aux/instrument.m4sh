##                                                        -*- shell-script -*-
## instrument.as: This file is part of build-aux.
## Copyright (C) 2006-2009, Gostai S.A.S.
##
## This software is provided "as is" without warranty of any kind,
## either expressed or implied, including but not limited to the
## implied warranties of fitness for a particular purpose.
##
## See the LICENSE file for more information.
## For comments, bug reports and feedback: http://www.urbiforge.com
##



m4_defun([_URBI_INSTRUMENT_PREPARE],
[normalize_boolean ()
{
  local var=$[1]
  local val
  eval val=\$$var
  case $val in
      (yes|true|1) val=true;;
      (*)          val=false;;
  esac
  verbose "$var=$val"
  eval "$var=$val"
}


# COMMAND-PREFIX instrument OPTIONS and ARGUMENTS
# -----------------------------------------------
# Return what's to be prepended to an executable so that it is instrumented
# to be checked: Valgrind or Darwin's Malloc features.
#
# OPTIONS and ARGUMENTS are passed to instrument, see its --help.
instrument ()
{
  # Initialization.
  if test -z "$instrument_was_run"; then
    instrument_was_run=true
    normalize_boolean INSTRUMENT
    # Under some circumstances, instead of 2s until "server.port", I
    # have 156s when running Valgrind...  But factor 100 is really a
    # lot, see if we can do with 50.
    if $INSTRUMENT; then
      timeout_factor 50
    fi
  fi

  if ! $INSTRUMENT; then
    set x --mode=none "$[@]"
    shift
  fi
  $abs_top_srcdir/build-aux/instrument "$[@]"
}
])



m4_defun([URBI_INSTRUMENT_PREPARE],
[m4_divert_text([M4SH-INIT], [_URBI_INSTRUMENT_PREPARE])])
