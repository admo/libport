#! /bin/sh

# Bootstrap Urbi module buildsystem.
# Input: modules.ac files in subdirectories, optonally modules.mk files.
# Output: ./modules.ac to include in your configure.ac
#         ./modules.mk to include in your Makefile.am
# modules.ac expected content: autoconf code that sets urbi_enable_module=false
#   to disable the module. Empty is fine.
# modules.mk is autogenerated if not present, using all recursively found source
#   files in the module directory
#

: >modules.mk
: >modules.ac

me=$(basename $0)
buildauxdir=$(dirname $0)

stderr ()
{
  local i
  for i
  do
    echo >&2 "$me: $i"
  done
}

# Look for modules.ac files.
acfiles=$(find */* -name modules.ac)
stderr "acfiles: " $acfiles
for acfile in $acfiles
do
  moduledir=$(dirname $acfile)
  modulename=$(basename $moduledir)
  modulenormname=$(echo $modulename | tr '-' '_')
  modulenormdir=$(echo $moduledir | tr '-' '_')

  # Check if this is a full or a skeleton modules.ac.
  if grep -q URBI_MODULE $acfile; then
    stderr "Appending $acfile"
    echo "m4_include($acfile)" >> modules.ac
  else
    stderr "Generating and appending $acfile.auto"
    {
      echo "URBI_MODULE([$modulenormname],"
      echo "["
      cat $acfile
      echo "])"
    }>$acfile.auto
    echo "m4_include($acfile.auto)" >> modules.ac
  fi

  # Generate modules.mk if it is not there
  if test -f "$moduledir/modules.mk"; then
    stderr "Appending $moduledir/modules.mk"
    echo "include $moduledir/modules.mk" >> modules.mk
  else
    stderr "Generating and appending $moduledir/modules.mk.auto"
    modulesources=$(find "$moduledir" \
	-name '*.cc'      \
	-or -name '*.cpp' \
	-or -name '*.hh'  \
	-or -name '*.c'   \
	-or -name '*.hxx' | xargs echo)

    sed -e  "s/@MODULENAME@/$modulename/g" \
        -e  "s/@MODULENORMNAME@/$modulenormname/g" \
        -e  "s/@MODULEDIR@/$moduledir/g"   \
	-e  "s/@MODULENORMDIR@/$modulenormdir/g"   \
	-e  "s!@MODULESOURCES@!$modulesources!g" \
      "$buildauxdir/module.mk.skel" > "$moduledir/modules.mk.auto"
    echo "include $moduledir/modules.mk.auto" >> modules.mk
  fi
done
