#! /bin/sh

##
## bootstrap: This file is part of build-aux.
## Copyright (C) Gostai S.A.S., 2006-2008.
##
## This software is provided "as is" without warranty of any kind,
## either expressed or implied, including but not limited to the
## implied warranties of fitness for a particular purpose.
##
## See the LICENSE file for more information.
## For comments, bug reports and feedback: http://www.urbiforge.com
##

usage ()
{
  cat <<EOF
Usage: $0 [PAIR...]

Bootstrap the GNU Build system using autoreconf.

A PAIR maybe FROM:TO or PATH as a shortcut for PATH:PATH.  Install
libport/FROM as TO before autoreconf.  Typical use:

   $0 build-aux include/libport
EOF
}

stderr ()
{
  local i
  for i
  do
    echo >&2 "$0: $i"
  done
}

set -e

# If there are symlinks to install bits of libport, do it here.
for pair
do
  # pair can be from:to, or from standing for from:from.
  from=$(echo "$pair" | sed -e 's/:.*//')
  to=$(echo "$pair" | sed -e 's/.*://')
  from=libport/$from

  if ! test -e $to; then
    stderr "Installing $from as $to"
    mkdir -p $(dirname "$to")
    ot=$(dirname "$to" | sed 's,[^\\/]*,..,g')
    ot=$(dirname "$ot")
    ln -sf $ot/$from $to ||
    ln $from $to ||
    cp -pr $from $to
  fi
done

if test -f bootstrap.cfg; then
  source bootstrap.cfg
fi

for i in $keep
do
  cp $i $i.bak
done

# On some environments (Darwin Ports), libtoolize is glibtoolize.
# I suppose their autoreconf is adjusted accordingly, but I use
# my custom Autoconf...
for lt in "$LIBTOOLIZE" libtoolize glibtoolize
do
  if ($lt --version) >/dev/null 2>&1; then
    export LIBTOOLIZE="$lt"
    break
  fi
done

autoreconf -f -v -i

for i in $keep
do
  mv $i.bak $i
done

# If the pseudo-standard name "_build" is used, then how about trying
# to continue the re-build?
if test -f _build/config.status; then
  cd _build
  ./config.status --recheck
  ./config.status
  make
fi

# Local Variables:
# mode: shell-script
# End:
