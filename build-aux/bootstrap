#! /bin/sh

##
## bootstrap: This file is part of build-aux.
## Copyright (C) Gostai S.A.S., 2006-2008.
##
## This software is provided "as is" without warranty of any kind,
## either expressed or implied, including but not limited to the
## implied warranties of fitness for a particular purpose.
##
## See the LICENSE file for more information.
## For comments, bug reports and feedback: http://www.urbiforge.com
##

usage ()
{
  cat <<EOF
Usage: $0 [PAIR...]

Bootstrap the GNU Build system using autoreconf.

A PAIR maybe FROM:TO or PATH as a shortcut for PATH:PATH.  Install
libport/FROM as TO before autoreconf.  Typical use:

   $0 build-aux include/libport

Options:
  -h, --help      display this message and exit
  -n, --dry-run   do nothing

EOF
}

stderr ()
{
  local i
  local me=$(basename "$0")
  for i
  do
    echo >&2 "$me: $i"
  done
}

run ()
{
  stderr "run: $*"
  if $run; then
    "$@"
  fi
}

set -e

run=true
for arg
do
  case $arg in
    -n|--dry-run) run=false;;
    -h|--help) usage;;
    *) pairs="$pairs $arg";;
  esac
done

# Also gather from .externals if there is one.
if test -f .externals; then
  pairs="$pairs "$(sed -n '/^link: */{s///;s/[	 ]*->[	 ]*/:/p;}' .externals)
fi

# If there are symlinks to install, do it here.
for pair in $pairs
do
  # pairs are from:to in the sense of symlinks: ./$from points to ./$to.
  from=$(echo "$pair" | sed -e 's/:.*//')
  to=$(echo "$pair" | sed -e 's/.*://')

  if ! test -e $from; then
    stderr "Installing $from -> $to"
    mkdir -p $(dirname "$from")
    morf=$(dirname $(echo "$from" | sed 's,[^\\/]*,..,g'))
    run ln -sf $morf/$to $from ||
    run ln $to $from ||
    run cp -pr $to $from
  fi
done

if test -f bootstrap.cfg; then
  source bootstrap.cfg
fi

for i in $keep
do
  run cp $i $i.bak
done

# On some environments (Darwin Ports), libtoolize is glibtoolize.
# I suppose their autoreconf is adjusted accordingly, but I use
# my custom Autoconf...
for lt in "$LIBTOOLIZE" libtoolize glibtoolize
do
  if ($lt --version) >/dev/null 2>&1; then
    export LIBTOOLIZE="$lt"
    break
  fi
done

run autoreconf -f -v -i

for i in $keep
do
  run mv $i.bak $i
done

# If the pseudo-standard name "_build" is used, then how about trying
# to continue the re-build?
if test -f _build/config.status; then
  run cd _build
  run ./config.status --recheck
  run ./config.status
  run make
fi

# Local Variables:
# mode: shell-script
# End:
