#! /usr/bin/perl -w

use strict;

my %package_info;
my $top_srcdir = $ENV{"top_srcdir"} || ".";

# FIXME: The following code was preserved and translated from an
# earlier implementation: it is most probably badly broken.  But it's
# a good starting point.
sub revision_svn ()
{
  my $changelog = "$top_srcdir/ChangeLog";

  # Be sure not to have `/' in Id.  The embedded date may be
  # separated by `/' instead of `-', which sed dislikes.
  for my $key ("Date", "Id", "Rev")
    {
      $package_info{$key} = `sed -n 's/^\$$key: \(.*\) \$/\1/p' $changelog`;
    }
}

# git_rev_list ($REVISION, $FORMAT)
# ---------------------------------
sub git_rev_list ($$)
{
  my ($rev, $format) = @_;
  my $res = `env "GIT_DIR=$top_srcdir/.git" \\
             git log -1 --pretty="format:$format" $rev`;
  chomp $res;
  $res =~ s/\\/\\\\/g;
  $res =~ s/\"/\\\"/g;
  return $res;
}

sub revision_git ($)
{
  my ($rev) = @_;
  $package_info{'Date'} = git_rev_list($rev, '%ai');
  $package_info{'Id'} = git_rev_list($rev, '%h (%ai %ae: %s)');
  $package_info{'Rev'} = git_rev_list($rev, '%h');
}

sub output ($)
{
  my ($outfile) = @_;
  open(OUTFILE, ">$outfile");

  print OUTFILE <<EOF;
// The SCM revision string.
#define PACKAGE_REVISION "$package_info{Rev}"

// The SCM identification string.
#define PACKAGE_ID \\
  "$package_info{Id}"

// The SCM date string.
#define PACKAGE_DATE "$package_info{Date}"

// Version and revision together.
#define PACKAGE_VERSION_REV \\
  "version " PACKAGE_VERSION " rev. " PACKAGE_REVISION
EOF

  close(OUTFILE);
}

## ------ ##
## Main.  ##
## ------ ##

my $out = $ARGV[0] || "-";
my $rev = $ARGV[1] || 'HEAD';
revision_git ($rev);

for my $k (sort keys %package_info)
{
  print STDERR "$k -> $package_info{$k}\n";
}
output($out);

### Setup "GNU" style for perl-mode and cperl-mode.
## Local Variables:
## perl-indent-level: 2
## perl-continued-statement-offset: 2
## perl-continued-brace-offset: 0
## perl-brace-offset: 0
## perl-brace-imaginary-offset: 0
## perl-label-offset: -2
## cperl-indent-level: 2
## cperl-brace-offset: 0
## cperl-continued-brace-offset: 0
## cperl-label-offset: -2
## cperl-extra-newline-before-brace: t
## cperl-merge-trailing-else: nil
## cperl-continued-statement-offset: 2
## End:
