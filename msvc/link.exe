#! /bin/bash

# Wrapper to use Microsoft compiler and linker under wine with
# Autotools.

set -e

case $VERBOSE in (x)
  set -x;;
esac

me=$(basename "$0")

stderr ()
{
  local i
  for i
  do
    echo >&2 "$me: $i"
  done
}

error ()
{
  local exit=$1
  shift
  stderr "$@"
  exit $exit
}

fatal ()
{
  error 1 "$@"
}


PROG=$me
VCXX_PATH=$(winepath -u $VCINSTALLDIR)
VCXX_BIN=$VCXX_PATH/bin

if ! test -x $VCXX_BIN/cl.exe; then
  fatal "cl.exe not found in $VCXX_BIN"
fi

outargs=/MD
#echo PROG is $PROG >&2
case $PROG in
  (cl.exe) outargs="$outargs /nologo /EHsc";;
esac

linkargs=
compile_mode=false
preprocess_mode=false
got_output_arg=false
source=
#output file name
output=
transform()
{
  case $1 in
    (/*) winepath -w "$1";;
    (*)  echo "$1";;
  esac
}
# The libs we produce are called libfoo.lib, whereas the system libs are
# called foo.lib.
lib_dirs='~/.wine/winroot/boost_1_35_0/lib $VCXX_PATH/lib $VCXX_PATH/PlatformSDK/Lib'
systemlibs=$(find $lib_dirs -iname '*.lib' -exec basename {} ';' | tr A-Z a-z)

handle_lib()
{
  stderr "start: $1"
  base=${1#-l}.lib
  complete=lib$base
  for l in $systemlibs; do
    if [ $l = $base ]; then
      complete=$base
    fi
  done
  echo $(transform $complete)
}

while ! test -z "$1"; do
  larg=
  carg=
  case $1 in
  (-link) ;;
  (-dll) larg="/DLL" ;;
  (-L*)  larg=/LIBPATH:$(transform ${1#-L}) ;;
#  (-l*)  larg=$(transform ${1#-l}.lib) ;;
  (-l*)  larg=$(handle_lib $1) ;;
  (*.lib) larg=$(transform $1) ;;
  (*.a)  larg=$(transform $(echo $1 | sed -e 's/.a$/.lib/')) ;;
  (-E)  preprocess_mode=true; carg=/E ;;
  (-c)  compile_mode=true; carg=/c ;;
  (-o)  shift
       got_output_arg=true
       output="$1"
       if $compile_mode || echo $1 | egrep -q '(.o|.obj)$'; then
         carg=/Fo$(transform $1)
       else
         if test "$PROG" = link.exe ; then
           carg="/OUT:$(transform $1)"
	 else
	   carg=/Fe$(transform $1)
	 fi
	 larg="/SUBSYSTEM:console  /MANIFEST kernel32.lib"
       fi
       # if echo $1 | grep -q .exe; then PROG=link.exe ; fi
      ;;
   (-Wno-unused-parameter) ;;
  (-g|-ggdb) ;; # carg="/Zi";;
  (-O2|-O3) carg=/O2;;
  (-f*)  ;;
  (*.dll)   carg=$(transform $(echo $1 |sed -re 's/(-[0-9]*)?.dll/.lib/')) ;;
  (*.S)  carg="/TP $1";;
  (*.c|*.cc) carg=$(transform $1); source=$1  ;;
  (*)  carg=$1;;
  esac
  outargs="$outargs $carg"
  linkargs="$linkargs $larg"
  shift
done

# handle -c without -o
if $compile_mode && ! $got_output_arg; then
  obj=$(echo $source |sed -re 's/\.[^.]+$/.obj/')
  obj=$(basename "$obj")
  outargs="$outargs /Fo$(transform $obj)"
fi

if test "$PROG" = cl.exe && ! test -z "$linkargs"; then
  outargs="$outargs /link $linkargs"
  linkargs=
fi
if test x$WRAP_VERBOSE != x; then
  echo "  command:" $PROG "$outargs $linkargs" >/dev/stderr
fi

if $preprocess_mode; then
  # Split into two commands so that "set -e" will work
  tmp=/tmp/preprocess.$$
  $VCXX_BIN/$PROG $outargs $linkargs > $tmp
  cppoutput < $tmp
  rm $tmp
else
  $VCXX_BIN/$PROG $outargs $linkargs
fi

#embed manifest
#if echo $output | egrep -q '(exe|dll)$'; then
#  $VCXX_BIN/mt.exe -manifest "$(transform $output.manifest)" -outputresource:"$(transform $output);1"
#  rm "$output.manifest"
#fi

# embed manifest by compiling it into a resource to avoid mt.exe crash with
# -outputresource when using Wine
# Following procedure described at:
# http://msdn.microsoft.com/fr-fr/library/ms235591.aspx
if echo $output | egrep -q '(exe|dll)$'; then
  #$VCXX_BIN/mt.exe -manifest "$(transform $output).manifest" "-out:$(transform $output).auto.manifest"
  # Escape quotes
  sed -e 's/"/""/g' < "$output.manifest" > "$output.escaped.manifest"
  cat > "$output.auto.rc" << __EOF__
#include <winuser.h>
1 RT_MANIFEST {"$(cat $output.escaped.manifest)"}
__EOF__
  $VCXX_BIN/rc.exe /r "$(transform $output).auto.rc"
  $VCXX_BIN/$PROG $outargs $linkargs "$(transform $output).auto.RES"
fi

#rename .lib with a versioned name.
if echo $output | egrep -q -- '-[0-9.]+.dll'; then
  libname=$(echo $output | sed -re 's/dll/lib/')
  if test -f "$libname"; then
    mv -f $libname $(echo $output | sed -re 's/-[0-9.]+\.dll/.lib/')
  fi
fi
