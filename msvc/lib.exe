#! /bin/bash

# Copyright (C) 2008-2011, Gostai S.A.S.
#
# This software is provided "as is" without warranty of any kind,
# either expressed or implied, including but not limited to the
# implied warranties of fitness for a particular purpose.
#
# See the LICENSE file for more information.

PROG=lib.exe

me=$(basename "$0")
tmpdir=$(dirname "$0")

stderr ()
{
  local i
  for i
  do
    echo >&2 "$me (wrapper): $i"
  done
}

error ()
{
  local exit=$1
  shift
  stderr "$@"
  exit $exit
}

verbose ()
{
  case "$verbose: $VERBOSE " in
    (true:* | *" $me "* | *" x "*)
      stderr "$@"
      ;;
  esac
}

fatal ()
{
  error 1 "$@"
}

# Look for, and load, `msvc_env.sh'.
load_msvc_env ()
{
  local i
  # Skip if we can't run it.
  for i in ~/share/wine ~/.wine/drive_c $(dirname $0) ~/bin
  do
    local f=$i/msvc_env.sh
    verbose "trying to load $f"
    if test -f $f; then
      . $f
      verbose "loaded $f"
      return 0
    fi
  done
 return 1
}


# lib.exe pollutes the output with version info, which is
# troublesome for post-processing.  For instance:
#
# bf-4 $ [...]c:/vcxx8/VC/bin/lib.exe /LIST 'libltdl\.libs\libltdlc.lib'
# Microsoft (R) Library Manager Version 8.00.50727.42
# Copyright (C) Microsoft Corporation.  All rights reserved.
#
# libltdl/loaders/.libs/libltdl_libltdlc_la-preopen.o
# libltdl/.libs/libltdl_libltdlc_la-lt__alloc.o
# libltdl/.libs/libltdl_libltdlc_la-lt__debug.o
# libltdl/.libs/libltdl_libltdlc_la-lt_dlloader.o
# libltdl/.libs/libltdl_libltdlc_la-lt_error.o
# libltdl/.libs/libltdl_libltdlc_la-ltdl.o
# libltdl/.libs/libltdl_libltdlc_la-slist.o
# libltdl/.libs/argz.o
# libltdl/.libs/lt__dirent.o
# libltdl/.libs/lt__strl.o
# libltdl/.libs/libltdlcS.o
# libltdl/.libs/libltdlc.lax/loadlibrary.lib/libltdl/loaders/.libs/loadlibrary.o
run_lib_exe ()
{
  verbose "command: $@"
  "$lib_exe" "$@" >$tmpdir.out 2>$tmpdir.err
  status=$?

  # Warnings from wine.
  sed -e '/err:secur32:SECUR32_initSchannelSP libgnutls not found/d' \
    <$tmpdir.err 2>&1

  sed -e '/Microsoft (R) Library Manager/d'             \
      -e '/Copyright (C) Microsoft Corporation/d'       \
      -e 's/\r//g'                                      \
      -e '/^ *$/d'                                      \
    <$tmpdir.out
  return $status
}

load_msvc_env

repaths='cygpath winepath'
for repath in $repaths ''
do
  $repath --version >/dev/null 2>&1 &&
    break
done
test -n "$repath" ||
  error 176 "program not found: $repaths"

VS_PATH=$($repath -u "$VSINSTALLDIR")
VCXX_PATH=$($repath -u "$VCINSTALLDIR")
VCXX_BIN=$VCXX_PATH/bin
lib_exe=$VCXX_BIN/$PROG

test -x "$lib_exe" ||
  error 176 "$PROG not found in $VCXX_BIN"

: ${TMPDIR=/tmp}
tmpdir=$TMPDIR/$me.$$
case $VERBOSE in
  (x) ;;
  (*) trap "exit=\$?; rm -rf $tmpdir; exit \$exit" 0;;
esac
mkdir -p $tmpdir

outargs=/nologo
linkargs=

case $1 in
  (cru)
    shift
    outargs+=" /OUT:$1" ; shift
    ;;
  (x)  #gnah, we have to remove them one by one
    shift
    lib=$($repath -w $1)
    for f in $(run_lib_exe /LIST $lib); do
      mkdir -p $(dirname "$f")
      run_lib_exe $outargs "/EXTRACT:$f" "/OUT:$f" $lib
    done
    exit
    ;;
 (t)
    shift
    lib=$($repath -w $1)
    run_lib_exe $outargs /LIST $lib
    exit
    ;;
esac

while ! test -z $1; do
  larg=
  carg=
  case $1 in
    (-L*)   larg=/LIBPATH:${1#-L} ;;
    (-l*)   larg=${1#-l}.lib ;;
    (*.lib) larg=$1;;
    (*)     carg=$1;;
  esac
  outargs+=" $carg"
  linkargs+=" $larg"
  shift
done

run_lib_exe $outargs $linkargs
