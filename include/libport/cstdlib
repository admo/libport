// -*- c++ -*-
#ifndef LIBPORT_CSTDLIB
# define LIBPORT_CSTDLIB

# include <cstdlib>
# include <string>

# include <libport/compiler.hh>
# include <libport/detect-win32.h>
# include <libport/export.hh>

/*---------.
| setenv.  |
`---------*/

# if defined _MSC_VER || defined __MINGW32__
extern "C"
{
  LIBPORT_API
  int setenv(const char* key, const char* value, int overwrite);
}
# endif

/*----------.
| strtoll.  |
`----------*/

# if defined _MSC_VER
extern "C"
{
  LIBPORT_API
  long long strtoll(const char* nptr, char** endptr, int base);
}
# endif // WIN32

/*-----------.
| unsetenv.  |
`-----------*/

# if defined _MSC_VER || defined __MINGW32__
extern "C"
{
  LIBPORT_API
  int unsetenv(const char* key);
}
# endif

/*----------.
| xgetenv.  |
`----------*/

extern "C"
{
  /// Return getenv(c) if defined, \a deflt otherwise.
  LIBPORT_API
  const char* xgetenv(const char* c, const char* deflt = "");
}

namespace libport
{
  /// Return getenv(c) if defined, \a deflt otherwise.
  LIBPORT_API
  std::string xgetenv(const char* c, const std::string& deflt = "");
}

/*--------.
| xsystem |
`--------*/

namespace libport
{
  LIBPORT_API
  ATTRIBUTE_UNUSED_RESULT
  int  system(const std::string& cmd);
  LIBPORT_API
  void xsystem(const std::string& cmd);
}

#endif // ! LIBPORT_CSTDLIB
