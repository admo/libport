/*
 * Copyright (C) 2009, Gostai S.A.S.
 *
 * This software is provided "as is" without warranty of any kind,
 * either expressed or implied, including but not limited to the
 * implied warranties of fitness for a particular purpose.
 *
 * See the LICENSE file for more information.
 */

/// \file libport/cmath
/// \brief Portable <cmath>

#ifndef LIBPORT_CMATH
# define LIBPORT_CMATH

# include <libport/config.h>
# include <libport/detect-win32.h>

// Ask MSVC++ to define M_PI and the like.  Be sure to define this
// very early in the series of includes, otherwise we might include
// cmath indirectly before this defin.  In which case it is too late
// to get the symbol.
# define _USE_MATH_DEFINES
# include <cmath>

# if defined _MSC_VER

#  include <cfloat>
namespace std
{

#  define LIBPORT_BOUNCE(Posix, WinExpr)        \
  template<typename _Tp>                        \
  inline                                        \
  int                                           \
  Posix(_Tp __f)                                \
  {                                             \
    return WinExpr;                             \
  }

  LIBPORT_BOUNCE(isfinite, _finite(__f))
  LIBPORT_BOUNCE(isinf,    !_isnan(__f) && !_finite(__f))
  LIBPORT_BOUNCE(isnan,    _isnan(__f))

#  undef LIBPORT_BOUNCE

}

# endif // defined WIN32

#endif // !LIBPORT_CMATH

// Local Variables:
// mode: C++
// End:
