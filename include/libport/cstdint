/*
 * Copyright (C) 2011, Gostai S.A.S.
 *
 * This software is provided "as is" without warranty of any kind,
 * either expressed or implied, including but not limited to the
 * implied warranties of fitness for a particular purpose.
 *
 * See the LICENSE file for more information.
 */

#ifndef LIBPORT_CSTDINT
# define LIBPORT_CSTDINT

# include <libport/detect-win32.h>
# include <libport/config.h>

# if defined LIBPORT_HAVE_CSTDINT || defined LIBPORT_HAVE_STDINT_H
#  if defined LIBPORT_HAVE_CSTDINT
#   include <cstdint>
#  else
#   include <stdint.h>
#  endif

namespace libport
{
  typedef std::uint32_t uint32_t;
  typedef std::int32_t int32_t;
  typedef std::uint16_t uint16_t;
  typedef std::int16_t int16_t;
  typedef std::uint8_t uint8_t;
  typedef std::int8_t int8_t;
}

# else // ! LIBPORT_HAVE_CSTDINT && ! LIBPORT_HAVE_STDINT_H
#  include <boost/cstdint.hpp>

namespace libport
{
  typedef boost::uint32_t uint32_t;
  typedef boost::int32_t int32_t;
  typedef boost::uint16_t uint16_t;
  typedef boost::int16_t int16_t;
  typedef boost::uint8_t uint8_t;
  typedef boost::int8_t int8_t;
}

# endif

# if !defined LIBPORT_NO_CSTDINT_TYPES
extern "C"
{
  using libport::uint32_t;
  using libport::int16_t;
  using libport::uint16_t;
  using libport::int8_t;
  using libport::uint8_t;
}
# endif

#endif // LIBPORT_CSTDINT

// Local Variables:
// mode: C++
// End:
