This directory contains files that are used through out URBI projects.

* Auxiliary tools
** libport.mk
Include this Makefile if you want to use and install libport.  To
check libport, use its Makefile.am, but ony urbi-sdk should (to save
cycles).

* Components
** fwd.hh
Forward declaration for classes.

** containers.hh, containers.hxx
Syntactic sugar around containers.

** deref.hh, deref.hx, deref.cc
Output values, references and pointers equally on a stream: they all
print the value.

** hash.hh
libport::hash_map<K, V>, Hash tables.  Relies on either G++'s or MS'.
We should check for ext/hash_map and hash_map.h instead of relying on
!Windows.

** indent.hh
Function objects to implement indented pretty-printing on an ostream.
See tests/test-indent.cc for examples.

** lockable.hh.
class libport::Lockable and macro BLOCKED.

** pair.hh, pair.hxx
Same as std::pair, but with support for operator<<.

** ref-pt.hh
libport::RefPt, ref counted pointers.  Prefer libport::shared_ptr from
now on.

** semaphore.hh.
class libport::Semaphore.

** separator.hh.
Output the content of containers with a separator between items.

** shared-ref.hh
libport::shared_ref<T> ref-counted pointers on top of
boost::shared_ptr.

** singleton-ptr.hh
Macros STATIC_INSTANCE(Cl, Name), EXTERN_STATIC_INSTANCE(Cl, Name).

** thread.hh.

** ufloat.h.
A nasty wrapper around ufloat.hh and ufloat.cc that, in addition,
imports libport::ufloat in ::.  Should be removed eventually.

** ufloat.hh, ufloat.cc
libport::ufloat.  The latter must be compiled in if
HAVE_LIBPORT_UFLOAT_HH is defined.

The generation of the tables should be part of a single object.  There
is already a dummy class, let's make it less dummy by moving
everything into it.  Besides, there is code to factor.

We have five supports
- float
- double
- long
- long long
- floating, i.e., a long for the mantissa, a long for the exponent.

Additionally, functions might be tabulated or not.

*** uffloat.hh, uffloat.cc
class urbi::UFFloat.

*** ulong-fixed-point.hh
class urbi::ULongFixedPoint.

** utime.hh
long long libport::utime().

** windows.hh
Wrap the inclusion of windows.h with the expected magic.  Can be
included unconditionally on non Windows hosts.

* TODO

** documentation
Doxygenation of these components

** lib
It would be useful to compile some parts instead of putting
everything in header files (e.g., utime.cc).

** stdext.hh
Define macros to reach the namespace of non standard extensions.
Should be extracted from hash.hh.

** test
Write test for these components.

** ufloat
We need a more powerful Autoconf macro to select the version of ufloat
we want to use.

Local Variables:
mode: outline
End:
